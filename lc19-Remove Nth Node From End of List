/**
 * 
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

class Solution 
{
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) 
    {
        ListNode* slow = head;
        ListNode* fast = head;
        
        // Move fast pointer n steps ahead of slow pointer
        for (int i = 0; i < n; i++) 
        {
            fast = fast->next;
        }
        
        // If fast pointer reaches end of list, remove first element
        if (!fast) 
        {
            head = head->next;
            return head;
        }
        
        // Move both pointers until fast pointer reaches end of list
        while (fast->next) 
        {
            slow = slow->next;
            fast = fast->next;
        }
        
        // Remove nth element from end of list
        slow->next = slow->next->next;
        return head;
    }
};
