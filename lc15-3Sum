class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        vector<vector<int>> res; //declare a vector of vector of int, to store result
        sort(nums.begin(), nums.end()); // Sort the input array in ascending order
        int n = nums.size();
        
        for (int i = 0; i <= n - 1; i++) 
        {
            // Skip duplicate values for i
            if (i > 0 && nums[i] == nums[i-1]) 
            {
                continue;
            }
            
            // Two-pointer approach for the rest of the array
            int left = i + 1, right = n - 1;
            while (left < right) 
            {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == 0) 
                {
                    res.push_back({nums[i], nums[left], nums[right]});
                    left++;
                    right--;
                    
                    // Skip duplicate values for left and right
                    while (left < right && nums[left] == nums[left-1]) 
                    {
                        left++;
                    }
                    while (left < right && nums[right] == nums[right+1]) 
                    {
                        right--;
                    }
                } 
                else if (sum < 0) 
                    {
                        left++;
                    } 
                    else 
                    {
                    right--;
                    }
            }
        }
        
        return res;
    }
};
