/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

# include <vector>
using namespace std;

class Solution 
{
public:
    bool isPalindrome(ListNode* head) 
    {
        vector <int> aVec;
        while (head != nullptr)
        {
            aVec.push_back(head->val);
            head = head->next;
        }   

        int n = aVec.size();
        for (int i=0; i<=n/2; i++)
        {
            if (aVec[i] != aVec[n-1-i])
                return false;
        }

        return true;

    }
};
