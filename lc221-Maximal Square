// may 7
//
//


class Solution 
{
public:

    int maximalSquare(vector<vector<char>>& matrix) 
    {
        int m = matrix.size();
        int n = m > 0 ? matrix[0].size() : 0;
        vector<vector<int>> dp(m+1, vector<int>(n+1, 0));
        int maxSide = 0;
        for (int i = 1; i <= m; i++) 
        {
            for (int j = 1; j <= n; j++) 
            {
                if (matrix[i-1][j-1] == '1') 
                {
                    dp[i][j] = min(min(dp[i-1][j], dp[i][j-1]), dp[i-1][j-1]) + 1;
                    maxSide = max(maxSide, dp[i][j]);
                }
            }
        }
        return maxSide * maxSide;
    }

};
